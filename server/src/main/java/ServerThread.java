import java.io.*;
import java.net.Socket;
import java.net.URLDecoder;
import java.nio.file.Files;
import java.nio.file.NoSuchFileException;
import java.nio.file.Path;
import java.nio.file.Paths;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class ServerThread implements Runnable {

    private static final String DOCUMENT_ROOT = "server/src/main/resources/web";
    private static final String ERROR_DOCUMENT = "server/src/main/resources";
    private static final String SERVER_NAME = "localhost:8001";

    private Socket socket;

    public ServerThread(Socket socket) {
        this.socket = socket;
    }

    @Override
    public void run() {
        try {

            String line;
            String requrestPath = null;
            String ext = null;
            String host = null;
            InputStream input = socket.getInputStream();
            while ((line = Util.readLine(input)) != null) {
                if (line.isEmpty()) break;
                if (line.startsWith("GET")) {
                    requrestPath = URLDecoder.decode(line.split(" ")[1], "UTF-8");
                    String[] tmp = requrestPath.split("\\.");
                    ext = tmp[tmp.length - 1];
                } else if (line.startsWith("Host:")) {
                    host = line.substring("Host: ".length());
                }
            }

            if (requrestPath == null) {
                return;
            }

            if (requrestPath.endsWith("/")) {
                requrestPath += "index.html";
                ext = "html";
            }

            OutputStream output = socket.getOutputStream();
            Path path = Paths.get(DOCUMENT_ROOT + requrestPath);
            Path realPath;

            try {
                realPath = path.toRealPath();
            } catch (NoSuchFileException ex) {
                SendResponse.sendNotFoundResponse(output, ERROR_DOCUMENT);
                return;
            }
            if (!realPath.startsWith(Paths.get(DOCUMENT_ROOT).toRealPath().toString())) {
                SendResponse.sendNotFoundResponse(output, ERROR_DOCUMENT);
                return;
            } else if (Files.isDirectory(realPath)) {
                String location = "http://"
                        + ((host != null) ? host : SERVER_NAME)
                        + path + "/";
                SendResponse.sendMovePermanentlyResponse(output, location);
                return;
            }

            try (FileInputStream inputStream = new FileInputStream(DOCUMENT_ROOT + requrestPath)) {
                SendResponse.sendOkResponse(output, inputStream, ext);
            } catch (FileNotFoundException ex) {
                SendResponse.sendNotFoundResponse(output, ERROR_DOCUMENT);
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                socket.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

}
