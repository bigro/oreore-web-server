import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.time.ZoneId;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class Server01 {

    private static final String DOCUMENT_ROOT = "server/src/main/resources/web";

    public static void main(String[] args) {

        try (ServerSocket server = new ServerSocket(8001)) {
            Socket socket = server.accept();
            InputStream input = socket.getInputStream();

            String line;
            String path = null;
            while ((line = readLine(input)) != null) {
                if (line.isEmpty()) break;
                if (line.startsWith("GET")) {
                    path = line.split(" ")[1];
                }
            }

            OutputStream output = socket.getOutputStream();
            writeLine(output, "HTTP/1.1 200 OK");
            writeLine(output, "Date: " + getDateStringUtc());
            writeLine(output, "Server: Sever02.java");
            writeLine(output, "Connection: close");
            writeLine(output, "Content-type: text/html");
            writeLine(output, "");

            
            try(FileInputStream inputStream = new FileInputStream(DOCUMENT_ROOT + path);) {
                int ch;
                while ((ch = inputStream.read()) != -1) {
                    output.write(ch);
                }
            }
            
            socket.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private static void writeLine(OutputStream output, String line) throws IOException {
        for (char c : line.toCharArray()) {
            output.write((int) c);
        }
        output.write((int) '\r');
        output.write((int) '\n');
    }

    private static String readLine(InputStream input) throws IOException {
        int ch;
        String ret = "";
        while ((ch = input.read()) != -1) {
            if (ch == '\r') {
            } else if (ch == '\n') {
                break;
            } else {
                ret += (char) ch;
            }
        }

        if (ch == -1) {
            return null;
        } else {
            return ret;
        }
    }

    private static String getDateStringUtc() {
        ZonedDateTime time = ZonedDateTime.now(ZoneId.of("GMT"));
        return time.format(DateTimeFormatter.ofPattern("EEE, dd MMM yyyy HH:mm:ss"));
    }
}
